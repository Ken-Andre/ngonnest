/// Configuration des cat√©gories durables pour NgonNest MVP
/// D√©finit les 4 cat√©gories principales pour organiser les biens durables
/// Finalit√© MVP : "Catalogue cat√©gories durables maisons Camerounaises pour organiser les biens durables"

/// Liste fixe des cat√©gories durables disponibles
const List<Map<String, String>> CATEGORIES_DURABLES = [
  {
    'id': 'electromenager',
    'name': '√âlectrom√©nager',
    'description': 'R√©frig√©rateur, TV, ventilateur, plaque cuisson...',
    'icon': 'üè†',
  },
  {
    'id': 'meubles',
    'name': 'Meubles',
    'description': 'Canap√©, table, chaises, lit, armoire...',
    'icon': 'üõãÔ∏è',
  },
  {
    'id': 'electronique',
    'name': '√âlectronique',
    'description': 'Ordinateur, radio, appareils √©lectroniques...',
    'icon': 'üíª',
  },
  {
    'id': 'exterieur',
    'name': 'Ext√©rieur / Jardin',
    'description': 'Terrasse, jardin, √©quipements ext√©rieurs...',
    'icon': 'üå≥',
  },
];

/// R√©cup√®re une cat√©gorie par son ID
Map<String, String>? getDurableCategoryById(String id) {
  try {
    return CATEGORIES_DURABLES.firstWhere(
      (category) => category['id'] == id,
    );
  } catch (e) {
    return null;
  }
}

/// R√©cup√®re le nom d'une cat√©gorie par son ID
String getDurableCategoryName(String id) {
  final category = getDurableCategoryById(id);
  return category?['name'] ?? 'Autre';
}

/// R√©cup√®re l'ic√¥ne d'une cat√©gorie par son ID
String getDurableCategoryIcon(String id) {
  final category = getDurableCategoryById(id);
  return category?['icon'] ?? 'üì¶';
}

/// Liste des IDs des cat√©gories durables pour validation
const List<String> CATEGORIES_DURABLES_IDS = [
  'electromenager',
  'meubles',
  'electronique',
  'exterieur',
];

/// V√©rifie si un ID de cat√©gorie est valide
bool isValidDurableCategory(String categoryId) {
  return CATEGORIES_DURABLES_IDS.contains(categoryId);
}
